{"mappings":"ACEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAE9B,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,EAAK,gBAAgB,CAAC,QAAS,WAC7B,EAAQ,wBACV,EACF,GAEM,EAAW,IAAI,QAAQ,SAAC,CAAA,CAAS,CAAvC,EACE,WAAW,WACT,EAAO,AAAI,MAAM,yBACnB,EAAG,IACL,GAEM,EAAgB,SAAC,CAAA,CAAS,CAAhC,EACE,IAAM,EAAM,SAAS,aAAa,CAAC,OAE/B,GACF,EAAI,SAAS,CAAC,GAAG,CAAC,GAGpB,EAAI,SAAS,CAAC,GAAG,CAAC,WAClB,EAAI,WAAW,CAAG,EAClB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,EAEM,EAAiB,SAAC,CAAxB,EACE,EAAc,EAChB,EAEM,EAAe,SAAC,CAAtB,EACE,EAAc,EAAM,OAAO,CAAE,gBAC/B,EAEA,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAe,EACjB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAa,EACf,GAEF,EACG,IAAI,CAAC,SAAC,CADT,EAEI,EAAe,EACjB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAa,EACf","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar logo = document.querySelector(\".logo\");\nvar promise1 = new Promise(function(resolve, reject) {\n    logo.addEventListener(\"click\", function() {\n        resolve(\"Promise was resolved!\");\n    });\n});\nvar promise2 = new Promise(function(resolve, reject) {\n    setTimeout(function() {\n        reject(new Error(\"Promise was rejected!\"));\n    }, 3000);\n});\nvar appendMessage = function(message, className) {\n    var div = document.createElement(\"div\");\n    if (className) div.classList.add(className);\n    div.classList.add(\"message\");\n    div.textContent = message;\n    document.body.appendChild(div);\n};\nvar successHandler = function(message) {\n    appendMessage(message);\n};\nvar errorHandler = function(error) {\n    appendMessage(error.message, \"error-message\");\n};\npromise1.then(function(message) {\n    successHandler(message);\n}).catch(function(error) {\n    errorHandler(error);\n});\npromise2.then(function(message) {\n    successHandler(message);\n}).catch(function(error) {\n    errorHandler(error);\n});\n\n//# sourceMappingURL=index.0540c6f5.js.map\n","'use strict';\n\nconst logo = document.querySelector('.logo');\n\nconst promise1 = new Promise((resolve, reject) => {\n  logo.addEventListener('click', () => {\n    resolve('Promise was resolved!');\n  });\n});\n\nconst promise2 = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    reject(new Error('Promise was rejected!'));\n  }, 3000);\n});\n\nconst appendMessage = (message, className) => {\n  const div = document.createElement('div');\n\n  if (className) {\n    div.classList.add(className);\n  }\n\n  div.classList.add('message');\n  div.textContent = message;\n  document.body.appendChild(div);\n};\n\nconst successHandler = (message) => {\n  appendMessage(message);\n};\n\nconst errorHandler = (error) => {\n  appendMessage(error.message, 'error-message');\n};\n\npromise1\n  .then((message) => {\n    successHandler(message);\n  })\n  .catch((error) => {\n    errorHandler(error);\n  });\n\npromise2\n  .then((message) => {\n    successHandler(message);\n  })\n  .catch((error) => {\n    errorHandler(error);\n  });\n"],"names":["logo","document","querySelector","promise1","Promise","resolve","reject","addEventListener","promise2","setTimeout","Error","appendMessage","message","className","div","createElement","classList","add","textContent","body","appendChild","successHandler","errorHandler","error","then","catch"],"version":3,"file":"index.0540c6f5.js.map"}